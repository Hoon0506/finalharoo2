<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="com.haroo.attendance.mapper.AttendanceMapper">
	<!-- <cache /> -->
	
	<!-- 이렇게 맞춰 놓으면 밑에서 AS 안 써도 됨 -->
	<resultMap type="com.haroo.attendance.domain.AttendanceVO" id="attendanceResult">
		<result property="atDate" column="at_date" />
		<result property="emNo" column="em_no" />
		<result property="atStart" column="at_start" />
		<result property="atEnd" column="at_end" />
		<result property="atState" column="at_state" />
		<result property="atNote" column="at_note" />
		<result property="emName" column="em_name" />
		<result property="deName" column="de_name" />
	
	</resultMap>
	
	<!-- 쿼리문 작성 -->
	
	<!-- 출근 데이터 입력 -->
	<insert id="insertStartTime" parameterType="int">
			insert into attendance 
    			select to_char(sysdate, 'yyyy-mm-dd'), #{emNo}, sysdate, NULL, NULL, NULL 
    			from dual
    			where not exists (select 1 from attendance where at_date = to_char(sysdate, 'yyyy-mm-dd') and em_no = #{emNo})
	</insert>
	
	
	<!-- 퇴근 시간 데이터 값 변경 (퇴근시간 값이 null일 경우에만 => is null 사용)-->
	<update id="updateEndTime" parameterType="int">
		update attendance 
    		set at_end = sysdate 
    		where em_no = #{emNo} and at_date = to_char(sysdate, 'yyyy-mm-dd') and at_end is null and at_state != 4
	</update>
	
	<!-- 외근 데이터 입력 -->
	<insert id="insertOutside" parameterType="int">
		insert into attendance
			select
				to_char(sysdate, 'yyyy-mm-dd'), #{emNo}, 
            	TO_date(concat(substr(TO_char(sysdate, 'YYYY-MM-DD HH24:MI:SS'), 1, 10), ' 09:00:00'), 'YYYY-MM-DD HH24:MI:SS'),
            	TO_date(concat(substr(TO_char(sysdate, 'YYYY-MM-DD HH24:MI:SS'), 1, 10), ' 18:00:00'), 'YYYY-MM-DD HH24:MI:SS'),
            	3, NULL
           	from dual
           	where not exists (select 1 from attendance where at_date = to_char(sysdate, 'yyyy-mm-dd') and em_no = #{emNo})
	</insert>
	
	<!-- 정상/지각 근무 상태 값 변경 -->
	<update id="updateState" parameterType="int">
		update attendance set at_state =
    (select distinct
    case when at_start <![CDATA[<=]]> TO_date(concat(substr(TO_char(at_date, 'YYYY-MM-DD HH24:MI:SS'), 1, 10), ' 09:00:00'), 'YYYY-MM-DD HH24:MI:SS') then 1
		 when at_start <![CDATA[>]]> TO_date(concat(substr(TO_char(at_date, 'YYYY-MM-DD HH24:MI:SS'), 1, 10), ' 09:00:00'), 'YYYY-MM-DD HH24:MI:SS') then 2
         else at_state end 
    from attendance a
    where at_date = TO_char(sysdate, 'YYYY-MM-DD') and a.em_no = #{emNo} and at_state is null
    		)
    	where at_date = TO_char(sysdate, 'YYYY-MM-DD') and em_no = #{emNo} and at_state is null
	</update>
	
	<!-- 휴가 가는 날은 근무 상태 4로 입력 ..왜 안될깝..!? 오류도 안 남, 디벨로퍼에서는 됨 => 해결~~!!!!-->
	<insert id="insertDayoff">
		insert into attendance 
		select to_char(sysdate, 'yyyy-mm-dd'),
 			(select em_no 
        		from leave 
        		where le_status = 1 
        		and TO_char(sysdate, 'YYYY-MM-DD') BETWEEN le_start AND le_end),
        	null, null, 4, 
        	(select le_kind 
        		from leave 
        		where le_status = 1 
        		and TO_char(sysdate, 'YYYY-MM-DD') BETWEEN le_start AND le_end)
		from dual 
		where exists (select em_no 
        		from leave 
        		where le_status = 1 
        		and TO_char(sysdate, 'YYYY-MM-DD') BETWEEN le_start AND le_end)
          
	</insert>
	
	<!-- 일별 근태조회 -->	
	<select id="statusAttendance" parameterType="int" resultType="com.haroo.attendance.domain.AttendanceVO" resultMap="attendanceResult">
		select a.at_date, a.em_no, a.at_start, a.at_end, a.at_state, a.at_note, e.em_name, d.de_name 
    		from attendance a 
    			JOIN employee e
    				ON a.em_no = e.em_no
				JOIN department d
					ON e.de_no = d.de_no
    		where at_date = TO_CHAR(sysdate, 'YYYY-MM-DD')
    		and d.de_no = (select de_no from employee where em_no = #{emNo})
    		order by a.em_no
	</select>
	
	<!-- 로그인한 사원의 부서목록 가져오기 -->
	<select id="listDept" parameterType="int" resultType="com.haroo.attendance.domain.AttendanceVO">
		select e.em_no as emNo, e.em_name as emName, d.de_name as deName
    		from employee e, department d
    		where e.de_no = d.de_no
    		and d.de_no = (select de_no from employee where em_no = #{emNo})
	</select>
	
	<!-- 오늘 날짜 -->
	<select id="printToday" resultType="String">
		select TO_char(sysdate, 'YYYY-MM-DD') from dual
	</select>
	
	<!-- 일별 부서 근태목록 조회 -->
	<select id="listDay" parameterType="com.haroo.attendance.domain.AttendanceVO" resultType="com.haroo.attendance.domain.AttendanceVO" resultMap="attendanceResult">
		select a.at_date, a.em_no, a.at_start, a.at_end, a.at_state, a.at_note, e.em_name, d.de_name 
    		from attendance a 
    			JOIN employee e
    				ON a.em_no = e.em_no
				JOIN department d
					ON e.de_no = d.de_no
    		where a.at_date = #{atDate}
    		and d.de_no = (select de_no from employee where em_no = #{emNo})
    		order by a.em_no
	</select>
	
	<!-- 월별 개인 근태목록 조회 -->
	<select id="listMonth" parameterType="com.haroo.attendance.domain.AttendanceVO" resultType="com.haroo.attendance.domain.AttendanceVO" resultMap="attendanceResult">
		select a.at_date, a.em_no, a.at_start, a.at_end, a.at_state, a.at_note, e.em_name, d.de_name 
    		from attendance a 
    			JOIN employee e
    				ON a.em_no = e.em_no
				JOIN department d
					ON e.de_no = d.de_no
    		where a.em_no = #{emNo} and substr(TO_char(a.at_date, 'YYYY-MM-DD HH24:MI:SS'), 1, 7) = #{atDate}
	</select>
	
	<!-- 검색 날짜 -->
	<select id="printSearchDate" parameterType="String" resultType="String">
		select #{atDate} AS atDate from dual
	</select>
	
	<!-- 정상출근 일수 -->
	<select id="countOnTime" parameterType="com.haroo.attendance.domain.AttendanceVO" resultType="int">
		<![CDATA[select count(em_no) AS atDate from attendance
    where at_start <= TO_date(concat(substr(TO_char(at_date, 'YYYY-MM-DD HH24:MI:SS'), 1, 10), ' 09:00:00'), 'YYYY-MM-DD HH24:MI:SS') 
        and substr(TO_char(at_date, 'YYYY-MM-DD HH24:MI:SS'), 1, 7) = #{atDate} and em_no = #{emNo}]]>
	</select>
	
	<!-- 지각 일수 -->
	<select id="countLate" parameterType="com.haroo.attendance.domain.AttendanceVO" resultType="int">
		<![CDATA[select count(em_no) AS atDate from attendance
    where at_start > TO_date(concat(substr(TO_char(at_date, 'YYYY-MM-DD HH24:MI:SS'), 1, 10), ' 09:00:00'), 'YYYY-MM-DD HH24:MI:SS') 
        and substr(TO_char(at_date, 'YYYY-MM-DD HH24:MI:SS'), 1, 7) = #{atDate} and em_no = #{emNo}]]>
	</select>
	
	<!-- 근무일수 구하기 -->
	<select id="getWorkingDay" parameterType="String" resultType="int">
		<!-- select substr(LAST_DAY(TO_date(concat(#{atDate}, '-01'), 'YYYY-MM-DD')), 9, 2) AS atDate FROM dual -->
		<!-- select substr(TO_char(LAST_DAY(TO_date(concat(#{atDate}, '-01'), 'YYYY-MM-DD')), 'YYYY-MM-DD HH24:MI:SS'), 9, 2) AS atDate FROM dual -->
	<![CDATA[
		SELECT
		COUNT(1) WORKING_DAYS
		--*
		FROM
		(
		SELECT
		TO_CHAR(start_dt + level - 1,'YYYYMMDD') dates,
		TO_CHAR(start_dt + level - 1,'D') d
		FROM
		(
		SELECT
		TO_date(concat(#{atDate}, '-01'), 'YYYY-MM-DD') AS start_dt, 
		TO_date(concat(#{atDate}, substr(TO_char(LAST_DAY(TO_date(concat('2022-06', '-01'), 'YYYY-MM-DD')), 'YYYY-MM-DD HH24:MI:SS'), 9, 2)), 'YYYY-MM-DD') AS end_dt
		FROM dual
		)
		CONNECT BY
		level <= end_dt - start_dt + 1
		) a 
		WHERE
		a.d NOT IN ('1', '7')
		ORDER BY a.dates
		]]>
	</select>
	
	<!-- 월 휴가간 일수 -->
	<select id="countDayoffDay" parameterType="com.haroo.attendance.domain.AttendanceVO" resultType="int">
		select count(em_no) AS atDate  FROM attendance where at_state = 4 and em_no = #{emNo} and substr(TO_char(at_date, 'YYYY-MM-DD HH24:MI:SS'), 1, 7) = #{atDate}
	</select>
	
</mapper>